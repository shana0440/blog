{"componentChunkName":"component---src-templates-blog-post-js","path":"/writings/electron-mac-developer-id-sign/","result":{"data":{"site":{"siteMetadata":{"title":"KWGUO Blog"}},"markdownRemark":{"id":"f34bf4d0-06d4-5061-ac49-6053eda5294d","excerpt":"之前覺得 mas 很麻煩的我真是太天真了 :) 讓我先解釋一下 Developer ID 是用來幹嘛的吧，如果我們要從 mac app store 以外的地方下載 app，那我們就不能使用 mac developer certificate 來 sign app，要使用 Developer ID certificate…","html":"<blockquote>\n<p>之前覺得 mas 很麻煩的我真是太天真了 :)</p>\n</blockquote>\n<p>讓我先解釋一下 Developer ID 是用來幹嘛的吧，如果我們要從 mac app store 以外的地方下載 app，那我們就不能使用 mac developer certificate 來 sign app，要使用 Developer ID certificate 來 sign，apple 就是毛這麼多，如果有人可以告訴我為啥要這麼龜毛，那就幫大忙了。</p>\n<p>要發布一個通過 apple 認證的 app 而不需用 mac store 需要三個步驟</p>\n<ol>\n<li>sign app</li>\n<li>pack app</li>\n<li>notarize app</li>\n</ol>\n<h3>GateKeeper</h3>\n<p>在講解步驟之前，我想先提一下為什麼事情變得這麼麻煩，就是因為 mac 有個東西叫做 gate keeper ，他會檢查所有 app 是不是都被 apple 認證了，沒有的話他會就警告你 =_=</p>\n<h3>Sign App</h3>\n<p>這邊基本上就是跟 <a href=\"/blog/electron-mac-app-store-sign\">sign mas</a> 一樣，不一樣的地方就是 sign 出來的 app 可以執行。</p>\n<h3>Pack App</h3>\n<p>electron builder 有提供 dmg &#x26; zip 之類的 build target ，要注意的是如果使用 <code class=\"language-text\">zip</code>，那出來的 artifact 解壓縮之後的檔案可能不能用，在 github repo 中已經有一個 <a href=\"https://github.com/electron-userland/electron-builder/issues/4299\">issue</a>，不知道什麼時候會處理好。</p>\n<p>不過我們可以使用 <code class=\"language-text\">ditto -c -k --keepParent \"$APP_PATH\" \"$ZIP_PATH\"</code> 來產生我們的 zip file，這樣 zip file 就不會有問題。</p>\n<h3>Notarize App</h3>\n<p>產生 artifact 之後還沒結束，我們要在 sign 一次 artifact，然後把 artifact 提交到 notarize server 讓 apple 對其認證，這樣我們才可以讓使用者下載這個 artifact。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># sign artifact</span>\ncodesign <span class=\"token parameter variable\">--deep</span> <span class=\"token parameter variable\">--force</span> <span class=\"token parameter variable\">--verbose</span> <span class=\"token parameter variable\">--sign</span> <span class=\"token string\">\"Developer ID Application: XXXXXX (XXXXX)\"</span> <span class=\"token string\">\"<span class=\"token variable\">$APP_PATH</span>\"</span>\n\n<span class=\"token comment\"># submit to notarize server, this will return a UUID if upload success</span>\nxcrun altool --notarize-app <span class=\"token punctuation\">\\</span>\n  --primary-bundle-id <span class=\"token string\">\"<span class=\"token variable\">$APP_ID</span>\"</span> <span class=\"token punctuation\">\\</span>\n  <span class=\"token parameter variable\">--username</span> <span class=\"token string\">\"<span class=\"token variable\">$APPLE_ID</span>\"</span> <span class=\"token punctuation\">\\</span>\n  <span class=\"token parameter variable\">--passowrd</span> <span class=\"token string\">\"<span class=\"token variable\">$PASSWORD</span>\"</span> <span class=\"token punctuation\">\\</span>\n  <span class=\"token parameter variable\">--file</span> <span class=\"token string\">\"<span class=\"token variable\">$ARTIFACT_PATH</span>\"</span> <span class=\"token punctuation\">\\</span>\n  <span class=\"token comment\"># 如果帳號只有連結到一個組織，那就不需用設定這個</span>\n  --asc-provider <span class=\"token string\">\"<span class=\"token variable\">$PROVIDER_SHORT_NAME</span>\"</span>\n\n<span class=\"token comment\"># list provider</span>\nxcrun altool --list-providers <span class=\"token parameter variable\">-u</span> <span class=\"token string\">\"<span class=\"token variable\">$APPLE_ID</span>\"</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"<span class=\"token variable\">$PASSWORD</span>\"</span>\n\n<span class=\"token comment\"># check notarize status</span>\nxcrun altool --notarization-info <span class=\"token string\">\"<span class=\"token variable\">$UUID</span>\"</span> <span class=\"token parameter variable\">-u</span> <span class=\"token string\">\"<span class=\"token variable\">$APPLE_ID</span>\"</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"<span class=\"token variable\">$PASSWORD</span>\"</span></code></pre></div>\n<p>當 status 變成 success 之後就代表成功了，如果有錯的話，<code class=\"language-text\">notarization-info</code> 會回傳 log 的網址，上面會說明錯誤。</p>\n<h2>Some commands that used to verify codesign</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\">## check who sign this app</span>\nspctl <span class=\"token parameter variable\">-a</span> <span class=\"token parameter variable\">-vv</span> <span class=\"token string\">\"<span class=\"token variable\">$APP_PATH</span>\"</span>\n\n<span class=\"token comment\">## check codesign is success or not</span>\ncodesign <span class=\"token parameter variable\">--verify</span> <span class=\"token parameter variable\">-vvvv</span> <span class=\"token string\">\"<span class=\"token variable\">$APP_PATH</span>\"</span></code></pre></div>\n<h2>Electron app blank after sign</h2>\n<p>有時候會遇到 electron app 在還沒 sign 之前好好的，但是 sign 之後畫面就整個沒出來，直接執行 <code class=\"language-text\">$APP_PATH/Contents/MacOS/$APP</code> 可以看到 terminal 有正常運作，<code class=\"language-text\">console.log</code> 都會顯示出來，如果是這樣的話，那原因可能出在 entitlements &#x26; child entitlements 這兩個檔案沒有設定好。</p>\n<blockquote>\n<p>child entitlement 是給 child process 用的</p>\n</blockquote>\n<p>在我的情況，兩個檔案都必須設置下面的權利。</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span>\n<span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">plist</span> <span class=\"token name\">PUBLIC</span> <span class=\"token string\">\"-//Apple//DTD PLIST 1.0//EN\"</span> <span class=\"token string\">\"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>plist</span> <span class=\"token attr-name\">version</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dict</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>key</span><span class=\"token punctuation\">></span></span>com.apple.security.cs.allow-unsigned-executable-memory<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>key</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>true</span><span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dict</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>plist</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<blockquote>\n<p>因為 mac app store 會自己幫你 notarize，所以上傳到 mas 其實會比較簡單，缺點就是沒辦法測試，就這點來說，我寧可自己 notarize。</p>\n</blockquote>\n<h2>References</h2>\n<ul>\n<li><a href=\"https://developer.apple.com/support/developer-id/\">https://developer.apple.com/support/developer-id/</a></li>\n<li><a href=\"https://developer.apple.com/documentation/xcode/notarizing_macos_software_before_distribution/customizing_the_notarization_workflow?preferredLanguage=occ\">https://developer.apple.com/documentation/xcode/notarizing_macos_software_before_distribution/customizing_the_notarization_workflow?preferredLanguage=occ</a></li>\n<li><a href=\"https://github.com/electron-userland/electron-builder/issues/4299\">https://github.com/electron-userland/electron-builder/issues/4299</a></li>\n<li><a href=\"http://github.com/electron/electron-osx-sign/issues/188\">http://github.com/electron/electron-osx-sign/issues/188</a></li>\n<li><a href=\"https://developer.apple.com/documentation/bundleresources/entitlements\">https://developer.apple.com/documentation/bundleresources/entitlements</a></li>\n</ul>","frontmatter":{"title":"Electron mac developer id sign","tags":["writing","electron","sign","deployment","entitlement"],"date":"September 16, 2020","description":"How to sign electron app with Developer ID certificate"}}},"pageContext":{"slug":"/electron-mac-developer-id-sign/","previous":{"fields":{"slug":"/testable-code/"},"frontmatter":{"title":"Testable code","tags":["writing","test","golang","code quality"]}},"next":{"fields":{"slug":"/react-native-aspectratio/"},"frontmatter":{"title":"react-native aspectRatio","tags":["writing","flutter","react-native"]}}}},"staticQueryHashes":["4111554205","63159454"]}