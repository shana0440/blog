{"componentChunkName":"component---src-templates-blog-post-js","path":"/writings/flutter-setstate/","result":{"data":{"site":{"siteMetadata":{"title":"KWGUO Blog"}},"markdownRemark":{"id":"ed029c44-f6f9-5eab-872b-6cb409efd5de","excerpt":"會寫這篇，主要是在公司的專案看到了下面這種寫法。 雖然說這種寫法是可以的，不同於 React 的 ，flutter 並沒有要求 state 必須是 immutable（沒記錯的話，如果在 React 直接去修改 state 在呼叫 ，畫面並不會更新，因為 state 指向同一個 reference，所以 React…","html":"<p>會寫這篇，主要是在公司的專案看到了下面這種寫法。</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">class</span> _CounterState <span class=\"token keyword\">extends</span> <span class=\"token class-name\">State</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Counter</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">{</span>\n  int _count<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">void</span> <span class=\"token function\">increase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    _count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>雖然說這種寫法是可以的，不同於 React 的 <code class=\"language-text\">setState</code>，flutter 並沒有要求 state 必須是 immutable（沒記錯的話，如果在 React 直接去修改 state 在呼叫 <code class=\"language-text\">setState</code>，畫面並不會更新，因為 state 指向同一個 reference，所以 React 會認為資料沒有更新），在 flutter 中， <code class=\"language-text\">setState</code> 會通知 framework 要進行 rebuild ，而 framework 會自己 schedule 一個時間來做這件事情，rebuild 的時候由於 state 已經是新的，所以 <code class=\"language-text\">setState(() {})</code> 看起來是不會有什麼問題。</p>\n<p>唯一個問題是 state 改變的時間點，當呼叫 <code class=\"language-text\">setState(() {})</code> 的時候，<code class=\"language-text\">setState</code> 的 callback 會被排入 queue 中，而 framework 會去執行這個 callback，如果我們在 callback 以外的地方更改 state ，當別的 widget 被其他事件 rebuild 的時候，這時候 state 可能沒有全部改變完畢，這會造成一些預料之外的行為，舉例來說，我們有個 widget 用來顯示文件，並且在 local 儲存一份做快取(先不要管我們不應該把這兩個行為放在一起，我想不到什麼好例子)。</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">class</span> _DocumentState <span class=\"token keyword\">extends</span> <span class=\"token class-name\">State</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Document</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">{</span>\n  bool _isLoading <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">String</span> _data<span class=\"token punctuation\">;</span>\n\n  <span class=\"token metadata function\">@override</span>\n  <span class=\"token keyword\">void</span> <span class=\"token function\">initState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">initState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    counterStream<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      _count <span class=\"token operator\">=</span> count<span class=\"token punctuation\">;</span>\n      <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token class-name\">Future</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">downloadDocument</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> filename<span class=\"token punctuation\">)</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">{</span>\n    _isLoading <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isDocumentInLocal</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      data <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">readDocumentFromLocal</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      _isLoading <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n      _data <span class=\"token operator\">=</span> data<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">final</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">downloadDocument</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      _isLoading <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// if widget rebuild during the async operation</span>\n      <span class=\"token comment\">// then will happened _isLoading is false, but _data is null.</span>\n      <span class=\"token keyword\">await</span> <span class=\"token function\">storeDocumentToLocal</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      _data <span class=\"token operator\">=</span> data<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>雖然我想不到什麼好例子，所以上面的程式感覺像是為犯錯而犯錯，不過已經可以表達我想要說明的問題點了，問題就是在於當我們呼叫 <code class=\"language-text\">downloadDocument</code> 後，修改了 <code class=\"language-text\">_isLoading</code>，接著執行了一個 async operation，最後再做了 <code class=\"language-text\">setState(() {})</code> 來更新畫面，問題是除了 <code class=\"language-text\">setState(() {})</code> 以外，還有其他情況會造成 widget rebuild，像是 parent rebuild 之類的，要是我們在進行 <code class=\"language-text\">storeDocumentToLocal</code> 的時候，widget 因為其他原因 rebuild 了，這時候就會產生 <code class=\"language-text\">_isLoading == false</code> 但是 <code class=\"language-text\">_data</code> 卻是 <code class=\"language-text\">null</code> 的情況。</p>\n<p>為了避免這個問題，就是要記住再修改 state 的時候，要記得放進 <code class=\"language-text\">setState</code> 的 callback 裡面。</p>\n<p>就我來看，這是一個非常不明顯的問題，平常就算這樣寫我想應該也不會有什麼問題，因為並不會很常去觸發 rebuild ，並且在撰寫程式的時候，其實不太容易發生在修改 state 之後，沒有呼叫 <code class=\"language-text\">setState</code> 就執行 async operation 的情況，所以這個問題很不明顯，但是這當然還是一個問題，可以的話，最好是避免他。</p>\n<p>另外在這邊總結一下使用 <code class=\"language-text\">setState</code> 要注意的部分，其實在 <code class=\"language-text\">setState</code> 原始碼的註解上都寫得滿清楚的了，有需要可以去看看。</p>\n<ol>\n<li>不要在 <code class=\"language-text\">setState</code> 的 callback 以外的地方去更改會動到畫面的 state</li>\n<li>不要在 <code class=\"language-text\">setState</code> 中執行任何 async operation</li>\n<li>不要在 <code class=\"language-text\">setState</code> 的 callback 裡頭做一些不會更改 state 的行為，這會拖累 <code class=\"language-text\">setState</code> 的執行時間，進而影響 flutter framework 對於 rebuild 時間的管理。</li>\n</ol>\n<h2>Reference</h2>\n<ul>\n<li><a href=\"https://github.com/flutter/flutter/issues/3951#issuecomment-219583755\">https://github.com/flutter/flutter/issues/3951#issuecomment-219583755</a></li>\n</ul>","frontmatter":{"title":"flutter setState","tags":["writing","flutter","state"],"date":"May 04, 2020","description":"Some note for flutter setState"}}},"pageContext":{"slug":"/flutter-setstate/","previous":{"fields":{"slug":"/deep-in-to-bloc/"},"frontmatter":{"title":"Deep in to BLoC","tags":["writing","flutter","state","bloc"]}},"next":{"fields":{"slug":"/flutter-intrinsicheight/"},"frontmatter":{"title":"flutter IntrinsicHeight","tags":["writing","flutter","dynamic height"]}}}},"staticQueryHashes":["4111554205","63159454"]}