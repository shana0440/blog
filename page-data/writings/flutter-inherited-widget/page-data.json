{"componentChunkName":"component---src-templates-blog-post-js","path":"/writings/flutter-inherited-widget/","result":{"data":{"site":{"siteMetadata":{"title":"KWGUO Blog"}},"markdownRemark":{"id":"10bfc810-dcb5-54ee-a533-b576fec3f0f9","excerpt":"我在目前的專案，都是使用 stream 來儲存資料，讓各個 bloc 來監聽 stream 並輸出不同的 state，而我在 twitter 上看到一篇文章說使用 stream 來觸發 rebuild 會造成多餘的 build，文章內建議使用  來處理這種 global state…","html":"<p>我在目前的專案，都是使用 stream 來儲存資料，讓各個 bloc 來監聽 stream 並輸出不同的 state，而我在 twitter 上看到一篇<a href=\"https://zonble.github.io/2019/12/07/what-if-states-are-out-of-flutter-widget-tree.html\">文章</a>說使用 stream 來觸發 rebuild 會造成多餘的 build，文章內建議使用 <code class=\"language-text\">InheritedWidget</code> 來處理這種 global state 的問題，而 <code class=\"language-text\">InheritedWidget</code> 對我來說有一個問題，就是他必須依賴 <code class=\"language-text\">context</code> 來獲得，這也因此激起我的興趣，想來研究一下 <code class=\"language-text\">InheritedWidget</code> 到底是怎麼運作的。</p>\n<h2>InheritedWidget source code research</h2>\n<p>先來看一個 <code class=\"language-text\">InheritedWidget</code> 的基本用法，這個 <code class=\"language-text\">InheritedWidget</code> 專門儲存整個 app 的語言設定，而所有 Widget 都可以透過 <code class=\"language-text\">context</code> 取得這個 <code class=\"language-text\">InheritedWidget</code>。</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">enum</span> <span class=\"token class-name\">Locale</span> <span class=\"token punctuation\">{</span>\n    EN<span class=\"token punctuation\">,</span>\n    ZH<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">LocaleProvider</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">InheritedWidget</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">final</span> <span class=\"token class-name\">Locale</span> locale<span class=\"token punctuation\">;</span>\n\n  <span class=\"token class-name\">LocaleProvider</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>locale<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token class-name\">Widget</span> child<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">:</span> child<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">static</span> <span class=\"token class-name\">LocaleProvider</span> <span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BuildContext</span> context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> context<span class=\"token punctuation\">.</span>dependOnInheritedWidgetOfExactType<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">LocaleProvider</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token metadata function\">@override</span>\n  bool <span class=\"token function\">updateShouldNotify</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">LocaleProvider</span> oldWidget<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> oldWidget<span class=\"token punctuation\">.</span>locale <span class=\"token operator\">!=</span> locale<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>接著我們來看 <code class=\"language-text\">InheritedWidget</code> 的 source code，可以看到他其實非常單純，唯一特別的是他建立了一個 <code class=\"language-text\">InheritedElement</code>。</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">InheritedWidget</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ProxyWidget</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token class-name\">InheritedWidget</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token class-name\">Key</span> key<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Widget</span> child <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">:</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">:</span> key<span class=\"token punctuation\">,</span> child<span class=\"token punctuation\">:</span> child<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token metadata function\">@override</span>\n  <span class=\"token class-name\">InheritedElement</span> <span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token class-name\">InheritedElement</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token metadata function\">@protected</span>\n  bool <span class=\"token function\">updateShouldNotify</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">covariant</span> <span class=\"token class-name\">InheritedWidget</span> oldWidget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>接下來是 <code class=\"language-text\">InheritedElement</code> source code，在那之前，我們要先知道 Widget 是 Element 的 configuration，我們雖然在寫的都是 Widget，但 Flutter Framework 會幫我們把 Widget 轉換成 Element。</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token comment\">/// An [Element] that uses an [InheritedWidget] as its configuration.</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">InheritedElement</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ProxyElement</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/// Creates an element that uses the given widget as its configuration.</span>\n  <span class=\"token class-name\">InheritedElement</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">InheritedWidget</span> widget<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>widget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token metadata function\">@override</span>\n  <span class=\"token class-name\">InheritedWidget</span> <span class=\"token keyword\">get</span> widget <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span>widget<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">final</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Element</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> _dependents <span class=\"token operator\">=</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Element</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token metadata function\">@override</span>\n  <span class=\"token keyword\">void</span> <span class=\"token function\">_updateInheritance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">assert</span><span class=\"token punctuation\">(</span>_active<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">final</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Type</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">InheritedElement</span><span class=\"token punctuation\">></span></span> incomingWidgets <span class=\"token operator\">=</span> _parent<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span>_inheritedWidgets<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>incomingWidgets <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n      _inheritedWidgets <span class=\"token operator\">=</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Type</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">InheritedElement</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>incomingWidgets<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">else</span>\n      _inheritedWidgets <span class=\"token operator\">=</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Type</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">InheritedElement</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    _inheritedWidgets<span class=\"token punctuation\">[</span>widget<span class=\"token punctuation\">.</span>runtimeType<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token metadata function\">@override</span>\n  <span class=\"token keyword\">void</span> <span class=\"token function\">debugDeactivated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">assert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">assert</span><span class=\"token punctuation\">(</span>_dependents<span class=\"token punctuation\">.</span>isEmpty<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">debugDeactivated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token metadata function\">@protected</span>\n  <span class=\"token class-name\">Object</span> <span class=\"token function\">getDependencies</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Element</span> dependent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> _dependents<span class=\"token punctuation\">[</span>dependent<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token metadata function\">@protected</span>\n  <span class=\"token keyword\">void</span> <span class=\"token function\">setDependencies</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Element</span> dependent<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    _dependents<span class=\"token punctuation\">[</span>dependent<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token metadata function\">@protected</span>\n  <span class=\"token keyword\">void</span> <span class=\"token function\">updateDependencies</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Element</span> dependent<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span> aspect<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setDependencies</span><span class=\"token punctuation\">(</span>dependent<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token metadata function\">@protected</span>\n  <span class=\"token keyword\">void</span> <span class=\"token function\">notifyDependent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">covariant</span> <span class=\"token class-name\">InheritedWidget</span> oldWidget<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Element</span> dependent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    dependent<span class=\"token punctuation\">.</span><span class=\"token function\">didChangeDependencies</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token metadata function\">@override</span>\n  <span class=\"token keyword\">void</span> <span class=\"token function\">updated</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">InheritedWidget</span> oldWidget<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>widget<span class=\"token punctuation\">.</span><span class=\"token function\">updateShouldNotify</span><span class=\"token punctuation\">(</span>oldWidget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">updated</span><span class=\"token punctuation\">(</span>oldWidget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// this will call [notifyClients]</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token metadata function\">@override</span>\n  <span class=\"token keyword\">void</span> <span class=\"token function\">notifyClients</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">InheritedWidget</span> oldWidget<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">assert</span><span class=\"token punctuation\">(</span><span class=\"token function\">_debugCheckOwnerBuildTargetExists</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">'notifyClients'</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Element</span> dependent <span class=\"token keyword\">in</span> _dependents<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">assert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// check that it really is our descendant</span>\n        <span class=\"token class-name\">Element</span> ancestor <span class=\"token operator\">=</span> dependent<span class=\"token punctuation\">.</span>_parent<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>ancestor <span class=\"token operator\">!=</span> <span class=\"token keyword\">this</span> <span class=\"token operator\">&amp;&amp;</span> ancestor <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n          ancestor <span class=\"token operator\">=</span> ancestor<span class=\"token punctuation\">.</span>_parent<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> ancestor <span class=\"token operator\">==</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// check that it really depends on us</span>\n      <span class=\"token keyword\">assert</span><span class=\"token punctuation\">(</span>dependent<span class=\"token punctuation\">.</span>_dependencies<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">notifyDependent</span><span class=\"token punctuation\">(</span>oldWidget<span class=\"token punctuation\">,</span> dependent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>可以看到 <code class=\"language-text\">InheritedElement</code> 內部有一個 <code class=\"language-text\">_dependents</code> 的 HashMap，記錄了所有跟他有關的 Element，並提供了一些方法來跟動這個 map，接著看到 <code class=\"language-text\">notifyClients</code>，這裡會遊歷 map 中的所有節點，並依據 <code class=\"language-text\">updateShouldNotify</code> 來決定是否呼叫所有節點的 <code class=\"language-text\">didChangeDependencies</code>。</p>\n<p>而我們是在什麼時候把節點加入到 <code class=\"language-text\">InheritedElement</code> 的呢？回到 <code class=\"language-text\">LocaleProvider</code>，我們提供了一個 function <code class=\"language-text\">of</code>，這個 <code class=\"language-text\">of</code> 呼叫了 <code class=\"language-text\">context.dependOnInheritedWidgetOfExactType&lt;LocaleProvider>()</code>，</p>\n<p>這個 <code class=\"language-text\">dependOnInheritedWidgetOfExactType</code> 定義在 <code class=\"language-text\">Element</code> 裡面，因為 <code class=\"language-text\">Element</code> 的 source code 很長，所以我只節錄了跟 <code class=\"language-text\">dependOnInheritedWidgetOfExactType</code> 有關的 source code；另外其實可以從 <code class=\"language-text\">Element</code> 的 source code 發現 <code class=\"language-text\">Element</code> 其實就是 <code class=\"language-text\">BuildContext</code>，有興趣再去看吧。</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\">  <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Type</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">InheritedElement</span><span class=\"token punctuation\">></span></span> _inheritedWidgets<span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">InheritedElement</span><span class=\"token punctuation\">></span></span> _dependencies<span class=\"token punctuation\">;</span>\n\n  <span class=\"token metadata function\">@override</span>\n  <span class=\"token class-name\">T</span> dependOnInheritedWidgetOfExactType<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">InheritedWidget</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token class-name\">Object</span> aspect<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">assert</span><span class=\"token punctuation\">(</span><span class=\"token function\">_debugCheckStateIsActiveForAncestorLookup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">final</span> <span class=\"token class-name\">InheritedElement</span> ancestor <span class=\"token operator\">=</span> _inheritedWidgets <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">:</span> _inheritedWidgets<span class=\"token punctuation\">[</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ancestor <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">assert</span><span class=\"token punctuation\">(</span>ancestor <span class=\"token operator\">is</span> <span class=\"token class-name\">InheritedElement</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token function\">dependOnInheritedElement</span><span class=\"token punctuation\">(</span>ancestor<span class=\"token punctuation\">,</span> aspect<span class=\"token punctuation\">:</span> aspect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    _hadUnsatisfiedDependencies <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token metadata function\">@override</span>\n  <span class=\"token class-name\">InheritedWidget</span> <span class=\"token function\">dependOnInheritedElement</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">InheritedElement</span> ancestor<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token class-name\">Object</span> aspect <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">assert</span><span class=\"token punctuation\">(</span>ancestor <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    _dependencies <span class=\"token operator\">?</span><span class=\"token operator\">?</span><span class=\"token operator\">=</span> <span class=\"token class-name\">HashSet</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">InheritedElement</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    _dependencies<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>ancestor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ancestor<span class=\"token punctuation\">.</span><span class=\"token function\">updateDependencies</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> aspect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> ancestor<span class=\"token punctuation\">.</span>widget<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>可以看到 <code class=\"language-text\">Element</code> 自己也有一個 <code class=\"language-text\">_inheritedWidgets</code> map，並且在呼叫 <code class=\"language-text\">dependOnInheritedWidgetOfExactType</code> 時，會根據我們傳入的 type 來取得對應的 <code class=\"language-text\">InheritedWidget</code>，接著呼叫 <code class=\"language-text\">dependOnInheritedElement</code> 來呼叫 <code class=\"language-text\">InheritedElement</code> 的 <code class=\"language-text\">updateDependencies</code> 進而更新 <code class=\"language-text\">InheritedElement</code> 中的 <code class=\"language-text\">_dependents</code>。</p>\n<p>到目前為止我們已經看完 <code class=\"language-text\">InheritedWidget</code> 相關的 source code 了，但是怎麼好像跟 build 一點關係都沒有？從 source code 來看， <code class=\"language-text\">InheritedWidget</code> 單純只是決定是否呼叫相關 Widget 的 <code class=\"language-text\">didChangeDependencies</code> 而已，而且 <code class=\"language-text\">InheritedWidget</code> 本身並沒有提供更新內部資料的方法，不過這篇有點太長了，所以我打算另外開一篇來做 Stream 跟 InheritedWidget 來管理 global state 的比較。</p>\n<h2>Reference</h2>\n<ul>\n<li><a href=\"https://juejin.im/post/5c80efde5188251b8a53b306#heading-12\">https://juejin.im/post/5c80efde5188251b8a53b306#heading-12</a></li>\n</ul>","frontmatter":{"title":"Flutter Inherited Widget","tags":["writing","flutter","state","inherited widget"],"date":"March 01, 2020","description":"Deep in to inherited widget"}}},"pageContext":{"slug":"/flutter-inherited-widget/","previous":{"fields":{"slug":"/build-and-deploy-ios-app/"},"frontmatter":{"title":"Build and Deploy iOS app","tags":["writing","flutter","ios","deployment","app store","sign"]}},"next":{"fields":{"slug":"/android-intent-flag_activity_new_task/"},"frontmatter":{"title":"Android Intent FLAG_ACTIVITY_NEW_TASK","tags":["writing","android","intent"]}}}},"staticQueryHashes":["4111554205","63159454"]}